{"version":3,"file":"const.js","sourceRoot":"","sources":["../../src/parser/const.ts"],"names":[],"mappings":"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","sourcesContent":["import { Char } from \"../const.js\";\nimport {\n  ICharGroupName,\n  ICharGroups,\n  ICharToGroup,\n  ICharToGroupSection,\n} from \"./types.js\";\n\nexport const CharGroupName = {\n  TEXT: \"t\",\n  QUOTE_SINGLE: Char.QUOTE_SINGLE,\n  QUOTE_DOUBLE: Char.QUOTE_DOUBLE,\n  QUOTE_BACKTICK: Char.QUOTE_BACKTICK,\n  BRACKET_ROUND: Char.BRACKET_ROUND_OPEN + Char.BRACKET_ROUND_CLOSE,\n  BRACKET_SQUARE: Char.BRACKET_SQUARE_OPEN + Char.BRACKET_SQUARE_CLOSE,\n  BRACKET_CURLY: Char.BRACKET_CURLY_OPEN + Char.BRACKET_CURLY_CLOSE,\n  BRACKET_CURLY_DOUBLE:\n    Char.BRACKET_CURLY_OPEN_DOUBLE + Char.BRACKET_CURLY_CLOSE_DOUBLE,\n  BRACKET_ANGLE: Char.BRACKET_ANGLE_OPEN + Char.BRACKET_ANGLE_CLOSE,\n};\n\nexport const CharGroups: ICharGroups = {\n  // [CharGroupName.TEXT]: [\"\", \"\"],\n  [CharGroupName.QUOTE_SINGLE]: [Char.QUOTE_SINGLE, Char.QUOTE_SINGLE],\n  [CharGroupName.QUOTE_DOUBLE]: [Char.QUOTE_DOUBLE, Char.QUOTE_DOUBLE],\n  [CharGroupName.QUOTE_BACKTICK]: [Char.QUOTE_BACKTICK, Char.QUOTE_BACKTICK],\n  [CharGroupName.BRACKET_ROUND]: [\n    Char.BRACKET_ROUND_OPEN,\n    Char.BRACKET_ROUND_CLOSE,\n  ],\n  [CharGroupName.BRACKET_SQUARE]: [\n    Char.BRACKET_SQUARE_OPEN,\n    Char.BRACKET_SQUARE_CLOSE,\n  ],\n  [CharGroupName.BRACKET_CURLY]: [\n    Char.BRACKET_CURLY_OPEN,\n    Char.BRACKET_CURLY_CLOSE,\n  ],\n  [CharGroupName.BRACKET_CURLY_DOUBLE]: [\n    Char.BRACKET_CURLY_OPEN_DOUBLE,\n    Char.BRACKET_CURLY_CLOSE_DOUBLE,\n  ],\n  [CharGroupName.BRACKET_ANGLE]: [\n    Char.BRACKET_ANGLE_OPEN,\n    Char.BRACKET_ANGLE_CLOSE,\n  ],\n};\n\nconst reduceChars = (\n  str: string,\n  groupName: ICharGroupName,\n  result: ICharToGroupSection\n) =>\n  [...str].reduce((resultPart, char, id) => {\n    const isLastChar = id + 1 === str.length;\n    const section = resultPart[char] || {};\n    resultPart[char] = section;\n\n    if (isLastChar) {\n      section.groupName = groupName;\n      return resultPart;\n    } else {\n      section.inner = section.inner || {};\n      return section.inner;\n    }\n  }, result);\n\nexport const CharToGroup = Object.entries(CharGroups).reduce(\n  (result: ICharToGroup, [groupName, [openChars, closeChars]]) => {\n    reduceChars(openChars, groupName, result.open);\n    reduceChars(closeChars, groupName, result.close);\n    return result;\n  },\n  {\n    open: {},\n    close: {},\n  }\n);\n"]}