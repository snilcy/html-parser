{"version":3,"file":"types.js","sourceRoot":"","sources":["../../src/parser/types.ts"],"names":[],"mappings":"","sourcesContent":["export type ICharGroupName = string;\nexport type ICharGroup = [string, string];\n\nexport interface ICharGroups {\n  [groupName: ICharGroupName]: ICharGroup;\n}\n\nexport interface ICharToGroupSection {\n  [char: string]: {\n    groupName?: ICharGroupName;\n    inner?: ICharToGroupSection;\n  };\n}\n\nexport interface ICharToGroup {\n  open: ICharToGroupSection;\n  close: ICharToGroupSection;\n}\n\nexport interface ICharGroupUsageList {\n  [groupName: ICharGroupName]: true;\n}\n\nexport interface IListConfig {\n  [char: string]: boolean | IListConfig;\n}\n\nexport interface ICharGroupItemConfig {\n  includes?: ICharGroupUsageList;\n  list?: IListConfig;\n}\n\nexport interface ICharGroupConfig {\n  groups: {\n    [groupName: ICharGroupName]: ICharGroupItemConfig;\n  };\n  root: ICharGroupUsageList;\n}\n\nexport interface ICharGroupMatch {\n  matchs: ICharGroupUsageList;\n  longest?: ICharGroupName;\n  length: number;\n}\n"]}