{"version":3,"file":"html.js","sourceRoot":"","sources":["../src/html.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAE,MAAM,YAAY,CAAC;AAClC,OAAO,EAAE,aAAa,EAAE,MAAM,mBAAmB,CAAC;AAGlD,MAAM,UAAU,GAAG;IACjB,QAAQ,EAAE;QACR,QAAQ,EAAE;YACR,IAAI,EAAE,MAAM;YACZ,KAAK,EAAE;gBACL,CAAC,aAAa,CAAC,aAAa,CAAC,EAAE,IAAI;gBACnC,CAAC,aAAa,CAAC,YAAY,CAAC,EAAE,IAAI;gBAClC,CAAC,aAAa,CAAC,YAAY,CAAC,EAAE,IAAI;gBAClC,CAAC,aAAa,CAAC,cAAc,CAAC,EAAE,IAAI;aACrC;SACF;QACD,QAAQ,EAAE;YACR,IAAI,EAAE,KAAK;YACX,KAAK,EAAE;gBACL,CAAC,aAAa,CAAC,YAAY,CAAC,EAAE,IAAI;gBAClC,CAAC,aAAa,CAAC,YAAY,CAAC,EAAE,IAAI;aACnC;SACF;QACD,IAAI,EAAE;YACJ,KAAK,EAAE,aAAa,CAAC,aAAa;YAClC,QAAQ,EAAE,IAAI,CAAC,KAAK;YACpB,IAAI,EAAE,MAAM;SACb;KACF;IACD,IAAI,EAAE,UAAU;CACjB,CAAC;AAEF,MAAM,SAAS,GAAG;IAChB,QAAQ,EAAE;QACR,KAAK,EAAE;YACL,IAAI,EAAE,MAAM;YACZ,KAAK,EAAE;gBACL,CAAC,aAAa,CAAC,aAAa,CAAC,EAAE,IAAI;gBACnC,IAAI,EAAE,IAAI;aACX;SACF;QACD,KAAK,EAAE;YACL,IAAI,EAAE,MAAM;YACZ,QAAQ,EAAE;gBACR,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,MAAM;aACrB;YACD,KAAK,EAAE;gBACL,CAAC,aAAa,CAAC,YAAY,CAAC,EAAE,IAAI;gBAClC,CAAC,aAAa,CAAC,YAAY,CAAC,EAAE,IAAI;aACnC;SACF;QACD,IAAI,EAAE;YACJ,IAAI,EAAE,KAAK;YACX,QAAQ,EAAE,IAAI,CAAC,KAAK;YACpB,KAAK,EAAE,EAAE;SACV;QACD,CAAC,aAAa,CAAC,aAAa,CAAC,EAAE;YAC7B,IAAI,EAAE,MAAM;YACZ,KAAK,EAAE;gBACL,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,MAAM;aACzB;SACF;KACF;IACD,IAAI,EAAE,OAAO;CACd,CAAC;AAEF,MAAM,CAAC,MAAM,MAAM,GAAqB;IACtC,IAAI,EAAE;QACJ,CAAC,aAAa,CAAC,aAAa,CAAC,EAAE,IAAI;QACnC,CAAC,aAAa,CAAC,oBAAoB,CAAC,EAAE,IAAI;KAC3C;IACD,MAAM,EAAE;QACN,CAAC,aAAa,CAAC,aAAa,CAAC,EAAE;YAC7B,QAAQ,EAAE;gBACR,CAAC,aAAa,CAAC,YAAY,CAAC,EAAE,IAAI;gBAClC,CAAC,aAAa,CAAC,YAAY,CAAC,EAAE,IAAI;aACnC;YACD,IAAI,EAAE;gBACJ,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;oBACZ,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI;iBACpB;aACF;SACF;QACD,CAAC,aAAa,CAAC,oBAAoB,CAAC,EAAE;QACpC,uCAAuC;SACxC;KACF;CACF,CAAC","sourcesContent":["import { Char } from \"./const.js\";\nimport { CharGroupName } from \"./parser/const.js\";\nimport { ICharGroupConfig } from \"./parser/types.js\";\n\nconst htmlConfig = {\n  entities: {\n    NodeList: {\n      type: \"list\",\n      value: {\n        [CharGroupName.BRACKET_ANGLE]: true,\n        [CharGroupName.QUOTE_SINGLE]: true,\n        [CharGroupName.QUOTE_DOUBLE]: true,\n        [CharGroupName.QUOTE_BACKTICK]: true,\n      },\n    },\n    NodeAttr: {\n      type: \"map\",\n      value: {\n        [CharGroupName.QUOTE_SINGLE]: true,\n        [CharGroupName.QUOTE_DOUBLE]: true,\n      },\n    },\n    Node: {\n      group: CharGroupName.BRACKET_ANGLE,\n      delimetr: Char.SPACE,\n      type: \"list\",\n    },\n  },\n  root: \"NodeList\",\n};\n\nconst cssConfig = {\n  entities: {\n    Props: {\n      type: \"list\",\n      value: {\n        [CharGroupName.BRACKET_CURLY]: true,\n        TEXT: true,\n      },\n    },\n    Value: {\n      type: \"list\",\n      delimetr: {\n        [Char.SPACE]: \"WORD\",\n      },\n      value: {\n        [CharGroupName.QUOTE_SINGLE]: true,\n        [CharGroupName.QUOTE_DOUBLE]: true,\n      },\n    },\n    Prop: {\n      type: \"map\",\n      delimetr: Char.COLON,\n      value: {},\n    },\n    [CharGroupName.BRACKET_CURLY]: {\n      type: \"list\",\n      value: {\n        [Char.SEMICOLON]: \"Prop\",\n      },\n    },\n  },\n  root: \"Props\",\n};\n\nexport const config: ICharGroupConfig = {\n  root: {\n    [CharGroupName.BRACKET_ANGLE]: true,\n    [CharGroupName.BRACKET_CURLY_DOUBLE]: true,\n  },\n  groups: {\n    [CharGroupName.BRACKET_ANGLE]: {\n      includes: {\n        [CharGroupName.QUOTE_SINGLE]: true,\n        [CharGroupName.QUOTE_DOUBLE]: true,\n      },\n      list: {\n        [Char.SPACE]: {\n          [Char.EQUALS]: true,\n        },\n      },\n    },\n    [CharGroupName.BRACKET_CURLY_DOUBLE]: {\n      // [CharGroupName.BRACKET_CURLY]: true,\n    },\n  },\n};\n"]}